상수 
	= 데이터 = 값 = 리터럴

	1. 정수 상수	:10(int), 10L(long), 014(8진법), 0xa(16진법)
	2. 실수 상수	:12.5f(float), 12.5(double), 12.5d(double) 
	3. 문자 상수	:'A','B','\t'
	4. 문자열 상수	:"A","CVS"

	System.out.println(정수+" ");
	System.out.println(정수+' '); // <- char = 문자 = int + unicode 연산됨!! *주의*
	



null
	모든 클래스를 초기화 할 때는 null로 한다. //ex) String str=null; 
	null은 공백도 아니고 문자도 아니다.

	String str=null;//초기값 null
	String str2="";//초기값""
	
	null은 아무런 값도 가지고 있지 않거나, 아무런 객체도 참조하지 않음을 나타내는 특별한 값을 나타냅니다. 
	null은 참조형 변수(Reference Types)에 할당되는 값으로, 
	변수가 어떠한 객체도 가리키지 않음을 표현합니다.

	일반적으로 다음과 같은 상황에서 null이 사용됩니다:

	객체가 초기화되지 않았을 때: 객체를 선언한 후, 
	객체를 생성하기 전에는 해당 객체 변수는 자동으로 null 값으로 초기화됩니다.

	null은 참조형 변수와 객체의 관계에서 중요한 역할을 합니다. 
	null 값을 가진 변수는 객체를 참조하지 않으므로 해당 객체에 대한 어떠한 작업도 수행할 수 없습니다. 
	
	따라서 null을 사용할 때는 변수가 null인지 검사하고 안전하게 처리하는 것이 중요합니다. 
	이를 위해 조건문과 예외 처리를 사용할 수 있습니다.
	ex) if (myVariable == null))