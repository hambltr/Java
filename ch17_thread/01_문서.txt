util------ *******

Thread : 스레드
Swing --- awt 기능 확장

import java.awt.*;
import.javax.swing.*;

network

Test01_go_come.java
Test02_Thread.java
Test03_Thread.java
Test04_Thread.java


01_문서.txt

synchronized 제한자와 wait(), notify(), notifyAll()
메서드를 함께 사용하여, 스레드 수행 순서를 조절한다.

두 스레드가 동시에 수행될 수 없으며, 
반드시 첫번째 스레드가 먼저 수행되어 데이터 영역(Vector)에 저장해야 한다.

또는 데이터 영역(Vector)크기를 제한하여 적절한 시기에
두번째 스레드가 수행(Vector에서 꺼내기 작업) 하게 된다.

이 경우 예를 들어

class House{
	//Vector에 넣는 작업
	synchronized void put(char c){
		while (작업할 수 없는 동안){
		try{
			wait(); // 대기
		}catch(Exception e){}
		}//while-end
		
		//처리내용 => 메세지 출력
		notifyAll(); //현재 슬드가 작업이 종료되었음을 모두에게 알려줌
	}//put()-end
	
	}//Vector에서 꺼내는 작업
	
	synchronized chat get(){
		while(작업을 할 수 없는 동안){
		try{
			wait(); //대기
		}catch(Exception e){}
	}//while-end
	
	처리내용-> 메세지 출력
	notifyAll(); //현재 슬드가 작업이 종료되었음을 모두에게 알려줌
	
	}//get()-end

}//class-end========================

//생산 클래스

class Producer extends Thread{
	put();//호출
	
	}
	
//소비 클래스

class Cousumer sxtends Thread{
	char c=get(); //호출
	
	}
	
	
Test05_Thread.java